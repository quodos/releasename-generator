image: node:lts-alpine

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build:
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist
  only:
    - main

deploy:
  stage: deploy
  dependencies:
    - build
  only:
    - main
  script:
    - ls -la

    - PROJECTNAME="rng"
    # naming conventions
    # folder name for the symbolic link
    - CURRENT="current"
    # folder that contains all the releases
    - RELEASES="releases"

    # the real root folder on the server, /production/ matches /var/www/
    - APP_ROOT=/production/thomaswilhelm.at/$PROJECTNAME/
    - RELEASE_ROOT=$APP_ROOT/$RELEASES/

    # dynamic name for the current release, results in something like this: 2017-10-31_07-53-54
    - RELEASE_DIR=$(date +%Y-%m-%d_%H-%M-%S)

    # create folder
    - mkdir -p $RELEASE_ROOT$RELEASE_DIR
    # copy files onto root
    - mv dist $RELEASE_ROOT$RELEASE_DIR

    # remove current link to the latest repository
    - cd $APP_ROOT && rm -f $CURRENT
    # create the new link
    - cd $APP_ROOT && ln -sf ../$PROJECTNAME/$RELEASES/$RELEASE_DIR ../$PROJECTNAME/$CURRENT

    # delete the oldest releases if there are more than 3
    - cd $RELEASE_ROOT && ls -t | tail -n +4 | xargs rm -rf --
    # set ownage to www-data (equals 33 on unix)
    - chown 33:33 -R $APP_ROOT
